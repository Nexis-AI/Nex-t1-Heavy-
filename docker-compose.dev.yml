version: '3.8'

services:
  # Redis service for development
  redis:
    image: redis:7-alpine
    container_name: nex-t1-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    command: redis-server --appendonly yes
    networks:
      - nex-t1-dev-network

  # PostgreSQL database for development
  postgres:
    image: postgres:16-alpine
    container_name: nex-t1-postgres-dev
    environment:
      POSTGRES_USER: nexai
      POSTGRES_PASSWORD: nexai123
      POSTGRES_DB: nex_t1_heavy_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    networks:
      - nex-t1-dev-network

  # Main application with hot-reloading
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nex-t1-app-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://nexai:nexai123@postgres:5432/nex_t1_heavy_dev
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-secret-key
      JWT_EXPIRATION: 7d
      DEBUG: nex-t1:*
    ports:
      - "3333:3000"     # App port (mapped to 3333 on host)
      - "9091:9090"     # Metrics port (mapped to 9091 on host)
      - "9229:9229"     # Debug port
    depends_on:
      - redis
      - postgres
    volumes:
      # Mount source code for hot-reloading
      - ./src:/app/src:delegated
      - ./prisma:/app/prisma:delegated
      # Exclude node_modules
      - /app/node_modules
    networks:
      - nex-t1-dev-network
    command: npm run dev

  # Prisma Studio for database management
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: nex-t1-prisma-studio
    environment:
      DATABASE_URL: postgresql://nexai:nexai123@postgres:5432/nex_t1_heavy_dev
    ports:
      - "5555:5555"
    depends_on:
      - postgres
    networks:
      - nex-t1-dev-network
    command: npx prisma studio
    profiles:
      - tools

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nex-t1-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - nex-t1-dev-network
    profiles:
      - tools

networks:
  nex-t1-dev-network:
    driver: bridge

volumes:
  redis-dev-data:
  postgres-dev-data: